---
title: "`r params$set_title`"
date: "Last Updated:  `r format(Sys.time(), '%d %B, %Y')`"
author: "`r params$set_author`<br/>"
abstract: "heh"
output:
  rmdformats::downcute:
    code_download: true
    keep_md: true
    self_contained: true
    thumbnails: true
    lightbox: true
    gallery: false
    highlight: tango
params:
  set_title:  "A2PG/Amador Demo App"
  set_author: !r stringr::str_to_title(gsub("\\.", " ", Sys.getenv()[["USERNAME"]]))
---

# Getting started

Use a programming language/multiple programming languages of choice.

Feel free to experiment in js framework: svelte

**Preferred**: Python, R (Shiny: Using Rhino framework)

Set this up however you feel comfortable. As long as the requirements of this app are met, the approach does not matter and we will optimize later.

# Requirements

1. Create a front end that allows users to upload data in (.csv) format: use **`iris`**, **`mtcars`**, **`diamonds`** as toy datasets.
2. Link the back end database (Mongo/Arango) to the front end UI.
    + E.g., once dataset is uploaded, it is stored in the database.
3. Render the dataset that is uploaded to the UI.
4. Create multiple buttons for the UI that manipulate data: Examples: "Delete Column", "Add Column", "Remove Row", "Sum Column".
    + May need to rely on data manipulation packages here: pandas, dplyr, etc...
5. Create query streams from these buttons that are compatible with database of choice and that are reactive at the click 
    + E.g., the buttons automatically create a query stream and performs the action in real time on the dataset that is rendered to the UI.
    
&nbsp;

6. You may have to setup your own MongoDB/ArangoDB instance, or use one and share it. This may require some configuration on your end. If this is taking too long -- feel free to use a public test instance: 

```{r, echo=TRUE}
url ="mongodb+srv://readwrite:test@cluster0-84vdt.mongodb.net/test"
```


![Example of self managed:](https://gitlab.com/ryan.ghannam-a2pg/kraken-localrepo2/-/raw/main/2022-05-26_10_27_28-Database_Deployments___Cloud__MongoDB_Cloud.png)


7. This will take some working through.
8. Get creative.
9. Don't worry.
10. Use intuition and be as simple as possible.

# Resources

1. MongoDB^[https://www.mongodb.com/]
2. ArangoDB^[https://www.arangodb.com/]
3. Svelte+Django Integration^[https://dev.to/ashraf_zolkopli/django-svelte-best-dev-experience-dx-1848]
4. R Shiny Rhino^[https://github.com/Appsilon/rhino]
5. R Shiny Rhino2^[https://appsilon.github.io/rhino/articles/tutorial/create-your-first-rhino-app.html]
6. Python in Shiny^[https://github.com/ranikay/shiny-reticulate-app]
7. Mongo in R^[https://jeroen.github.io/mongolite/index.html]
8. Mongo in R2^[https://github.com/jeroen/mongolite/]
